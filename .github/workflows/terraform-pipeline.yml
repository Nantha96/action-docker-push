name: Terraform CI/CD

on:
  push:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout version 1
      uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        no-cache: true
        tags: nantha96/app:latest
        build-args: |
          arg1=value1
          arg2=value2
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
          terraform_version: 0.13.4
          terraform_wrapper: false
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
    - name: Terraform Init
      run: terraform init
    - name: Terraform Apply
      id: apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve
    - name: Terrafrom Output
      run: |
        instanceid=$(terraform output DNS)
        echo ${{ steps.apply.outputs.DNS }}
    - name: Print Output
      env:
        test_variable: ${{ $(terraform output DNS)}}
      run: |
        echo $(terraform output DNS)
    # Configure aws-ssm to run the scripts from Actions
    - name: AWS SSM Rollout-Command
      uses: peterkimzz/aws-ssm-send-command@master
      id: ssm
      env:
        AWS_INSTANCE_ID: $(terraform output DNS)
      with:
        aws-region: us-east-2
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        instance-ids: ${{ env.AWS_INSTANCE_ID }}

        working-directory: /home/ubuntu
        command: "sudo docker stop $(sudo docker ps -q); sudo docker pull nantha96/app:latest; sudo docker run -p 8080:8080 nantha96/app:latest"
        comment: Roll-out
    
    #- name: Terraform Destroy
    #  run: terraform destroy -auto-approve
